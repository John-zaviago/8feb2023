// @ts-nocheck
/* eslint-disable */
/* tslint:disable */
/* prettier-ignore-start */
/** @jsxRuntime classic */
/** @jsx createPlasmicElementProxy */
/** @jsxFrag React.Fragment */
// This class is auto-generated by Plasmic; please do not edit!
// Plasmic Project: gVLjp5jEanpB9JmP1wfhu5
// Component: acQs1zUUSO5
import * as React from "react";
import * as p from "@plasmicapp/react-web";
import * as ph from "@plasmicapp/host";
import {
  classNames,
  createPlasmicElementProxy,
  deriveRenderOpts
} from "@plasmicapp/react-web";
import Button from "antd/lib/button"; // plasmic-import: kv6Mk_JNYw/codeComponent
import Button2 from "../../Button"; // plasmic-import: OiEpCGxwidZ/component
import TextInput from "../../TextInput"; // plasmic-import: VEoZuKV-qCO/component
import Select from "../../Select"; // plasmic-import: I-YmR_8FdnC/component
import TextArea from "antd/lib/input/TextArea"; // plasmic-import: ZJIPHLoTjkN/codeComponent
import Checkbox from "antd/lib/checkbox/Checkbox"; // plasmic-import: SAEWraOT2YV/codeComponent
import "@plasmicapp/react-web/lib/plasmic.css";
import projectcss from "./plasmic_zaviago_react_builder.module.css"; // plasmic-import: gVLjp5jEanpB9JmP1wfhu5/projectcss
import sty from "./PlasmicEmailOptions.module.css"; // plasmic-import: acQs1zUUSO5/css
import IconsvgIcon from "./icons/PlasmicIcon__Iconsvg"; // plasmic-import: ghfrvXPxoN/icon
import Vector2Icon from "./icons/PlasmicIcon__Vector2"; // plasmic-import: kYLBy02GU3/icon
import framesvgQpMvVUojHj from "./images/framesvg.svg"; // plasmic-import: qpMvVUojHj/picture

export const PlasmicEmailOptions__VariantProps = new Array();

export const PlasmicEmailOptions__ArgProps = new Array();

const __wrapUserFunction =
  globalThis.__PlasmicWrapUserFunction ?? ((loc, fn) => fn());

const __wrapUserPromise =
  globalThis.__PlasmicWrapUserPromise ??
  (async (loc, promise) => {
    return await promise;
  });

function PlasmicEmailOptions__RenderFunc(props) {
  const { variants, overrides, forNode } = props;
  const $ctx = ph.useDataEnv?.() || {};
  const args = React.useMemo(() => Object.assign({}, props.args), [props.args]);
  const $props = {
    ...args,
    ...variants
  };
  const refsRef = React.useRef({});
  const $refs = refsRef.current;
  const currentUser = p.useCurrentUser?.() || {};
  const [$queries, setDollarQueries] = React.useState({});
  return (
    <React.Fragment>
      <div className={projectcss.plasmic_page_wrapper}>
        <div
          data-plasmic-name={"root"}
          data-plasmic-override={overrides.root}
          data-plasmic-root={true}
          data-plasmic-for-node={forNode}
          className={classNames(
            projectcss.all,
            projectcss.root_reset,
            projectcss.plasmic_default_styles,
            projectcss.plasmic_mixins,
            projectcss.plasmic_tokens,
            sty.root
          )}
        >
          <div
            data-plasmic-name={"setting"}
            data-plasmic-override={overrides.setting}
            className={classNames(projectcss.all, sty.setting)}
          >
            <div className={classNames(projectcss.all, sty.column__vOmy4)}>
              {true ? (
                <div
                  className={classNames(projectcss.all, sty.freeBox___6TtUv)}
                >
                  <h1
                    className={classNames(
                      projectcss.all,
                      projectcss.h1,
                      projectcss.__wab_text,
                      sty.h1__pcGq9
                    )}
                  >
                    {"email setting"}
                  </h1>

                  <p.PlasmicImg
                    alt={""}
                    className={classNames(sty.img__ezyR4)}
                    displayHeight={"auto"}
                    displayMaxHeight={"none"}
                    displayMaxWidth={"100%"}
                    displayMinHeight={"0"}
                    displayMinWidth={"0"}
                    displayWidth={"12px"}
                    loading={"lazy"}
                    src={{
                      src: framesvgQpMvVUojHj,
                      fullWidth: 150,
                      fullHeight: 150,
                      aspectRatio: 1
                    }}
                  />
                </div>
              ) : null}

              <div
                className={classNames(
                  projectcss.all,
                  projectcss.__wab_text,
                  sty.text__bc7Ly
                )}
              >
                {
                  "Email notifications sent from your business are listed below. Click on an email to configure it."
                }
              </div>
            </div>

            <div className={classNames(projectcss.all, sty.column__djMuq)}>
              <div className={classNames(projectcss.all, sty.columns__vamRa)}>
                <div className={classNames(projectcss.all, sty.column__mzlPx)}>
                  <Button
                    data-plasmic-name={"antdButton"}
                    data-plasmic-override={overrides.antdButton}
                    className={classNames("__wab_instance", sty.antdButton)}
                    size={"medium"}
                    type={"default"}
                  >
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__xw5M
                      )}
                    >
                      {"Back"}
                    </div>
                  </Button>
                </div>

                <div className={classNames(projectcss.all, sty.column__p72QH)}>
                  <Button2
                    data-plasmic-name={"button"}
                    data-plasmic-override={overrides.button}
                    className={classNames("__wab_instance", sty.button)}
                    showStartIcon={true}
                    startIcon={
                      <IconsvgIcon
                        className={classNames(projectcss.all, sty.svg__pc4Z)}
                        role={"img"}
                      />
                    }
                  >
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__qPkZ8
                      )}
                    >
                      {"Save Changes"}
                    </div>
                  </Button2>
                </div>
              </div>
            </div>
          </div>

          <div className={classNames(projectcss.all, sty.columns___2Oow2)}>
            <div
              data-plasmic-name={"notification"}
              data-plasmic-override={overrides.notification}
              className={classNames(projectcss.all, sty.notification)}
            >
              <h1
                className={classNames(
                  projectcss.all,
                  projectcss.h1,
                  projectcss.__wab_text,
                  sty.h1___2CIM
                )}
              >
                {"email sender options"}
              </h1>
            </div>
          </div>

          <div className={classNames(projectcss.all, sty.columns__v6Pbz)}>
            <div className={classNames(projectcss.all, sty.column__dgJuH)}>
              {true ? (
                <div className={classNames(projectcss.all, sty.freeBox__aOVa)}>
                  <h1
                    className={classNames(
                      projectcss.all,
                      projectcss.h1,
                      projectcss.__wab_text,
                      sty.h1__v4Kur
                    )}
                  >
                    {'"From" name'}
                  </h1>

                  <p.PlasmicImg
                    alt={""}
                    className={classNames(sty.img__pyJ5W)}
                    displayHeight={"auto"}
                    displayMaxHeight={"none"}
                    displayMaxWidth={"100%"}
                    displayMinHeight={"0"}
                    displayMinWidth={"0"}
                    displayWidth={"12px"}
                    loading={"lazy"}
                    src={{
                      src: framesvgQpMvVUojHj,
                      fullWidth: 150,
                      fullHeight: 150,
                      aspectRatio: 1
                    }}
                  />
                </div>
              ) : null}

              <TextInput
                className={classNames("__wab_instance", sty.textInput__tj8H6)}
                defaultValue={"test.getzaviago.com"}
                placeholder={"[{site_title}]: New order_number#{order_number}"}
              />
            </div>

            <div className={classNames(projectcss.all, sty.column__eqQcE)}>
              {true ? (
                <div className={classNames(projectcss.all, sty.freeBox__dxGm7)}>
                  <h1
                    className={classNames(
                      projectcss.all,
                      projectcss.h1,
                      projectcss.__wab_text,
                      sty.h1__jMl1W
                    )}
                  >
                    {'"From" address'}
                  </h1>

                  <p.PlasmicImg
                    alt={""}
                    className={classNames(sty.img___0MqVs)}
                    displayHeight={"auto"}
                    displayMaxHeight={"none"}
                    displayMaxWidth={"100%"}
                    displayMinHeight={"0"}
                    displayMinWidth={"0"}
                    displayWidth={"12px"}
                    loading={"lazy"}
                    src={{
                      src: framesvgQpMvVUojHj,
                      fullWidth: 150,
                      fullHeight: 150,
                      aspectRatio: 1
                    }}
                  />
                </div>
              ) : null}

              <Select
                data-plasmic-name={"select"}
                data-plasmic-override={overrides.select}
                className={classNames("__wab_instance", sty.select)}
                placeholder={
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__bEnp3
                    )}
                  >
                    {"service@zaviago.com"}
                  </div>
                }
              />
            </div>
          </div>

          <div className={classNames(projectcss.all, sty.columns__oGzam)}>
            <div
              data-plasmic-name={"notification2"}
              data-plasmic-override={overrides.notification2}
              className={classNames(projectcss.all, sty.notification2)}
            >
              <h1
                className={classNames(
                  projectcss.all,
                  projectcss.h1,
                  projectcss.__wab_text,
                  sty.h1__k4X2X
                )}
              >
                {"email template"}
              </h1>

              <div
                className={classNames(
                  projectcss.all,
                  projectcss.__wab_text,
                  sty.text___4CyMt
                )}
              >
                {"This section lets you customize the WooCommerce emails."}
              </div>
            </div>
          </div>

          <div className={classNames(projectcss.all, sty.columns__lGvCk)}>
            <div className={classNames(projectcss.all, sty.column__kmjX6)}>
              {true ? (
                <div className={classNames(projectcss.all, sty.freeBox__g410)}>
                  <h1
                    className={classNames(
                      projectcss.all,
                      projectcss.h1,
                      projectcss.__wab_text,
                      sty.h1___7UpXj
                    )}
                  >
                    {"Header image"}
                  </h1>

                  <p.PlasmicImg
                    alt={""}
                    className={classNames(sty.img___69JyW)}
                    displayHeight={"auto"}
                    displayMaxHeight={"none"}
                    displayMaxWidth={"100%"}
                    displayMinHeight={"0"}
                    displayMinWidth={"0"}
                    displayWidth={"12px"}
                    loading={"lazy"}
                    src={{
                      src: framesvgQpMvVUojHj,
                      fullWidth: 150,
                      fullHeight: 150,
                      aspectRatio: 1
                    }}
                  />
                </div>
              ) : null}

              <div
                data-plasmic-name={"rectangle669"}
                data-plasmic-override={overrides.rectangle669}
                className={classNames(projectcss.all, sty.rectangle669)}
              >
                <div
                  data-plasmic-name={"group47942"}
                  data-plasmic-override={overrides.group47942}
                  className={classNames(projectcss.all, sty.group47942)}
                >
                  <Vector2Icon
                    className={classNames(projectcss.all, sty.svg__vLuvN)}
                    role={"img"}
                  />

                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text___2Sju
                    )}
                  >
                    {"Add image"}
                  </div>
                </div>
              </div>
            </div>
          </div>

          <div className={classNames(projectcss.all, sty.columns__pX97)}>
            <div className={classNames(projectcss.all, sty.column__aEuOz)}>
              {true ? (
                <div
                  className={classNames(projectcss.all, sty.freeBox___5D7QE)}
                >
                  <h1
                    className={classNames(
                      projectcss.all,
                      projectcss.h1,
                      projectcss.__wab_text,
                      sty.h1__nLXa
                    )}
                  >
                    {"Footer text"}
                  </h1>

                  <p.PlasmicImg
                    alt={""}
                    className={classNames(sty.img__rpNvv)}
                    displayHeight={"auto"}
                    displayMaxHeight={"none"}
                    displayMaxWidth={"100%"}
                    displayMinHeight={"0"}
                    displayMinWidth={"0"}
                    displayWidth={"12px"}
                    loading={"lazy"}
                    src={{
                      src: framesvgQpMvVUojHj,
                      fullWidth: 150,
                      fullHeight: 150,
                      aspectRatio: 1
                    }}
                  />
                </div>
              ) : null}

              <TextArea
                data-plasmic-name={"antdInputTextArea"}
                data-plasmic-override={overrides.antdInputTextArea}
                allowClear={false}
                aria-label={"Description"}
                aria-labelledby={"Description"}
                className={classNames("__wab_instance", sty.antdInputTextArea)}
                defaultValue={"{site_title} &mdash; Built with Zaviago"}
                name={"Description"}
                placeholder={""}
                showCount={false}
              />
            </div>
          </div>

          <div className={classNames(projectcss.all, sty.columns__cXo8L)}>
            <div className={classNames(projectcss.all, sty.column__dkoq)}>
              {true ? (
                <div className={classNames(projectcss.all, sty.freeBox__cs8C)}>
                  <h1
                    className={classNames(
                      projectcss.all,
                      projectcss.h1,
                      projectcss.__wab_text,
                      sty.h1___7N0Mo
                    )}
                  >
                    {"Base color"}
                  </h1>

                  <p.PlasmicImg
                    alt={""}
                    className={classNames(sty.img__y6Soo)}
                    displayHeight={"auto"}
                    displayMaxHeight={"none"}
                    displayMaxWidth={"100%"}
                    displayMinHeight={"0"}
                    displayMinWidth={"0"}
                    displayWidth={"12px"}
                    loading={"lazy"}
                    src={{
                      src: framesvgQpMvVUojHj,
                      fullWidth: 150,
                      fullHeight: 150,
                      aspectRatio: 1
                    }}
                  />
                </div>
              ) : null}

              <TextInput
                className={classNames("__wab_instance", sty.textInput__kyRAf)}
                defaultValue={"#7F54B3"}
                placeholder={""}
              />
            </div>

            <div className={classNames(projectcss.all, sty.column__lZdTd)}>
              {true ? (
                <div className={classNames(projectcss.all, sty.freeBox__rjVz5)}>
                  <h1
                    className={classNames(
                      projectcss.all,
                      projectcss.h1,
                      projectcss.__wab_text,
                      sty.h1__pKnoh
                    )}
                  >
                    {"Background color"}
                  </h1>

                  <p.PlasmicImg
                    alt={""}
                    className={classNames(sty.img__liung)}
                    displayHeight={"auto"}
                    displayMaxHeight={"none"}
                    displayMaxWidth={"100%"}
                    displayMinHeight={"0"}
                    displayMinWidth={"0"}
                    displayWidth={"12px"}
                    loading={"lazy"}
                    src={{
                      src: framesvgQpMvVUojHj,
                      fullWidth: 150,
                      fullHeight: 150,
                      aspectRatio: 1
                    }}
                  />
                </div>
              ) : null}

              <TextInput
                className={classNames("__wab_instance", sty.textInput__asj4L)}
                defaultValue={"#F6F6F6"}
                placeholder={""}
              />
            </div>

            <div className={classNames(projectcss.all, sty.column__oRe0)}>
              {true ? (
                <div className={classNames(projectcss.all, sty.freeBox__qxhzn)}>
                  <h1
                    className={classNames(
                      projectcss.all,
                      projectcss.h1,
                      projectcss.__wab_text,
                      sty.h1__xK3Ze
                    )}
                  >
                    {"Body background color"}
                  </h1>

                  <p.PlasmicImg
                    alt={""}
                    className={classNames(sty.img___98XPs)}
                    displayHeight={"auto"}
                    displayMaxHeight={"none"}
                    displayMaxWidth={"100%"}
                    displayMinHeight={"0"}
                    displayMinWidth={"0"}
                    displayWidth={"12px"}
                    loading={"lazy"}
                    src={{
                      src: framesvgQpMvVUojHj,
                      fullWidth: 150,
                      fullHeight: 150,
                      aspectRatio: 1
                    }}
                  />
                </div>
              ) : null}

              <TextInput
                className={classNames("__wab_instance", sty.textInput__rn55E)}
                defaultValue={"#FFFFFF"}
                placeholder={""}
              />
            </div>

            <div className={classNames(projectcss.all, sty.column___1GLL)}>
              {true ? (
                <div className={classNames(projectcss.all, sty.freeBox__sr7T2)}>
                  <h1
                    className={classNames(
                      projectcss.all,
                      projectcss.h1,
                      projectcss.__wab_text,
                      sty.h1__ccxqL
                    )}
                  >
                    {"Body text color"}
                  </h1>

                  <p.PlasmicImg
                    alt={""}
                    className={classNames(sty.img__jYntY)}
                    displayHeight={"auto"}
                    displayMaxHeight={"none"}
                    displayMaxWidth={"100%"}
                    displayMinHeight={"0"}
                    displayMinWidth={"0"}
                    displayWidth={"12px"}
                    loading={"lazy"}
                    src={{
                      src: framesvgQpMvVUojHj,
                      fullWidth: 150,
                      fullHeight: 150,
                      aspectRatio: 1
                    }}
                  />
                </div>
              ) : null}

              <TextInput
                className={classNames("__wab_instance", sty.textInput__lOe1Q)}
                defaultValue={"#3C3C3C"}
                placeholder={""}
              />
            </div>
          </div>

          <div className={classNames(projectcss.all, sty.columns__q8Cq7)}>
            <div
              data-plasmic-name={"notification3"}
              data-plasmic-override={overrides.notification3}
              className={classNames(projectcss.all, sty.notification3)}
            >
              <h1
                className={classNames(
                  projectcss.all,
                  projectcss.h1,
                  projectcss.__wab_text,
                  sty.h1__zTz02
                )}
              >
                {"preview template"}
              </h1>

              <div
                className={classNames(
                  projectcss.all,
                  projectcss.__wab_text,
                  sty.text__oqeQh
                )}
              >
                {"This section lets you customize the WooCommerce emails."}
              </div>
            </div>
          </div>

          <div className={classNames(projectcss.all, sty.columns__ypdR)}>
            <div
              data-plasmic-name={"notification4"}
              data-plasmic-override={overrides.notification4}
              className={classNames(projectcss.all, sty.notification4)}
              id={""}
            >
              <h1
                className={classNames(
                  projectcss.all,
                  projectcss.h1,
                  projectcss.__wab_text,
                  sty.h1__wc8Pi
                )}
              >
                {"HTML email template"}
              </h1>
            </div>
          </div>

          <div className={classNames(projectcss.all, sty.columns___1WqDo)}>
            <div
              data-plasmic-name={"notification5"}
              data-plasmic-override={overrides.notification5}
              className={classNames(projectcss.all, sty.notification5)}
              id={""}
            >
              <p
                class={""}
                className={classNames(
                  projectcss.all,
                  projectcss.p,
                  projectcss.__wab_text,
                  sty.p___69Ps
                )}
              >
                {
                  "Lorem ipsum dolor sit amet, consectetur adipiscing elit. Phasellus non leo consectetur, porttitor metus eu, ultrices purus. Morbi congue risus sapien, nec lobortis eros varius nec. Cras quis ipsum vel ante semper sagittis. Integer diam metus, laoreet non lectus non, convallis elementum justo. Cras eget nunc turpis."
                }
              </p>

              <h1
                className={classNames(
                  projectcss.all,
                  projectcss.h1,
                  projectcss.__wab_text,
                  sty.h1__l4Tj
                )}
              >
                {"\nSed sit amet sapien odio"}
              </h1>

              <p
                class={""}
                className={classNames(
                  projectcss.all,
                  projectcss.p,
                  projectcss.__wab_text,
                  sty.p__sad
                )}
              >
                {
                  "\nPhasellus mi magna, ultrices eget velit ut, venenatis vulputate enim. Donec egestas neque in felis lacinia, ac finibus neque malesuada. Proin urna sem, aliquet ut sem ut, mattis laoreet sem."
                }
              </p>

              <h1
                className={classNames(
                  projectcss.all,
                  projectcss.h1,
                  projectcss.__wab_text,
                  sty.h1___2Xldn
                )}
              >
                {"\nLorem ipsum dolor"}
              </h1>

              <p
                class={""}
                className={classNames(
                  projectcss.all,
                  projectcss.p,
                  projectcss.__wab_text,
                  sty.p__fCr62
                )}
              >
                {
                  "\nInterdum et malesuada fames ac ante ipsum primis in faucibus. Nulla aliquet auctor tortor sed porta. Aenean faucibus lobortis felis ut ornare. Donec pellentesque fermentum ultrices."
                }
              </p>
            </div>
          </div>

          <div className={classNames(projectcss.all, sty.columns__kRjDu)}>
            <div
              data-plasmic-name={"notification6"}
              data-plasmic-override={overrides.notification6}
              className={classNames(projectcss.all, sty.notification6)}
            >
              <p
                className={classNames(
                  projectcss.all,
                  projectcss.p,
                  projectcss.__wab_text,
                  sty.p__p7Zig
                )}
              >
                {"parenttemplate.getzaviago.com -- Built with Zaviago"}
              </p>
            </div>
          </div>

          <div className={classNames(projectcss.all, sty.columns__zFbrO)}>
            <div
              data-plasmic-name={"notification7"}
              data-plasmic-override={overrides.notification7}
              className={classNames(projectcss.all, sty.notification7)}
            >
              <h1
                className={classNames(
                  projectcss.all,
                  projectcss.h1,
                  projectcss.__wab_text,
                  sty.h1__nTxOk
                )}
              >
                {"store management insights"}
              </h1>

              <p.Stack
                as={"div"}
                hasGap={true}
                className={classNames(projectcss.all, sty.freeBox___6QnuC)}
              >
                <h3
                  data-plasmic-name={"h3"}
                  data-plasmic-override={overrides.h3}
                  className={classNames(
                    projectcss.all,
                    projectcss.h3,
                    projectcss.__wab_text,
                    sty.h3
                  )}
                >
                  {"Enable email insights"}
                </h3>
              </p.Stack>

              <Checkbox
                data-plasmic-name={"antdCheckbox"}
                data-plasmic-override={overrides.antdCheckbox}
                className={classNames("__wab_instance", sty.antdCheckbox)}
              >
                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__dNBvc
                  )}
                >
                  {
                    "Receive email notifications with additional guidance to complete the basic store setup and helpful insights"
                  }
                </div>
              </Checkbox>
            </div>
          </div>
        </div>
      </div>
    </React.Fragment>
  );
}

const PlasmicDescendants = {
  root: [
    "root",
    "setting",
    "antdButton",
    "button",
    "notification",
    "select",
    "notification2",
    "rectangle669",
    "group47942",
    "antdInputTextArea",
    "notification3",
    "notification4",
    "notification5",
    "notification6",
    "notification7",
    "h3",
    "antdCheckbox"
  ],

  setting: ["setting", "antdButton", "button"],
  antdButton: ["antdButton"],
  button: ["button"],
  notification: ["notification"],
  select: ["select"],
  notification2: ["notification2"],
  rectangle669: ["rectangle669", "group47942"],
  group47942: ["group47942"],
  antdInputTextArea: ["antdInputTextArea"],
  notification3: ["notification3"],
  notification4: ["notification4"],
  notification5: ["notification5"],
  notification6: ["notification6"],
  notification7: ["notification7", "h3", "antdCheckbox"],
  h3: ["h3"],
  antdCheckbox: ["antdCheckbox"]
};

function makeNodeComponent(nodeName) {
  const func = function (props) {
    const { variants, args, overrides } = React.useMemo(
      () =>
        deriveRenderOpts(props, {
          name: nodeName,
          descendantNames: [...PlasmicDescendants[nodeName]],
          internalArgPropNames: PlasmicEmailOptions__ArgProps,
          internalVariantPropNames: PlasmicEmailOptions__VariantProps
        }),
      [props, nodeName]
    );

    return PlasmicEmailOptions__RenderFunc({
      variants,
      args,
      overrides,
      forNode: nodeName
    });
  };
  if (nodeName === "root") {
    func.displayName = "PlasmicEmailOptions";
  } else {
    func.displayName = `PlasmicEmailOptions.${nodeName}`;
  }
  return func;
}

export const PlasmicEmailOptions = Object.assign(
  // Top-level PlasmicEmailOptions renders the root element
  makeNodeComponent("root"),
  {
    // Helper components rendering sub-elements
    setting: makeNodeComponent("setting"),
    antdButton: makeNodeComponent("antdButton"),
    button: makeNodeComponent("button"),
    notification: makeNodeComponent("notification"),
    select: makeNodeComponent("select"),
    notification2: makeNodeComponent("notification2"),
    rectangle669: makeNodeComponent("rectangle669"),
    group47942: makeNodeComponent("group47942"),
    antdInputTextArea: makeNodeComponent("antdInputTextArea"),
    notification3: makeNodeComponent("notification3"),
    notification4: makeNodeComponent("notification4"),
    notification5: makeNodeComponent("notification5"),
    notification6: makeNodeComponent("notification6"),
    notification7: makeNodeComponent("notification7"),
    h3: makeNodeComponent("h3"),
    antdCheckbox: makeNodeComponent("antdCheckbox"),
    // Metadata about props expected for PlasmicEmailOptions
    internalVariantProps: PlasmicEmailOptions__VariantProps,
    internalArgProps: PlasmicEmailOptions__ArgProps,
    // Page metadata
    pageMetadata: {
      title: "recipients",
      description: "",
      ogImageSrc: "",
      canonical: ""
    }
  }
);

export default PlasmicEmailOptions;
/* prettier-ignore-end */
