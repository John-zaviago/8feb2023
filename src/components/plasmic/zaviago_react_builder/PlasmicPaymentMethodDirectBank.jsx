// @ts-nocheck
/* eslint-disable */
/* tslint:disable */
/* prettier-ignore-start */
/** @jsxRuntime classic */
/** @jsx createPlasmicElementProxy */
/** @jsxFrag React.Fragment */
// This class is auto-generated by Plasmic; please do not edit!
// Plasmic Project: gVLjp5jEanpB9JmP1wfhu5
// Component: -1iTkAPyym
import * as React from "react";
import * as p from "@plasmicapp/react-web";
import * as ph from "@plasmicapp/host";
import {
  hasVariant,
  classNames,
  createPlasmicElementProxy,
  deriveRenderOpts,
  ensureGlobalVariants
} from "@plasmicapp/react-web";
import Button from "../../Button"; // plasmic-import: OiEpCGxwidZ/component
import Button2 from "antd/lib/button"; // plasmic-import: kv6Mk_JNYw/codeComponent
import Input from "antd/lib/input"; // plasmic-import: tO9wrxr8Nbb/codeComponent
import TextArea from "antd/lib/input/TextArea"; // plasmic-import: ZJIPHLoTjkN/codeComponent
import Checkbox from "antd/lib/checkbox/Checkbox"; // plasmic-import: SAEWraOT2YV/codeComponent
import Select from "../../Select"; // plasmic-import: I-YmR_8FdnC/component
import { useScreenVariants as useScreenVariantsjc9Ly7HCoqclv } from "./PlasmicGlobalVariant__Screen"; // plasmic-import: JC9LY7hCOQCLV/globalVariant
import "@plasmicapp/react-web/lib/plasmic.css";
import projectcss from "./plasmic_zaviago_react_builder.module.css"; // plasmic-import: gVLjp5jEanpB9JmP1wfhu5/projectcss
import sty from "./PlasmicPaymentMethodDirectBank.module.css"; // plasmic-import: -1iTkAPyym/css
import IconsvgIcon from "./icons/PlasmicIcon__Iconsvg"; // plasmic-import: ghfrvXPxoN/icon
import XmarksvgIcon from "./icons/PlasmicIcon__Xmarksvg"; // plasmic-import: 7zeOQd0aRb/icon
import Line52SvgIcon from "./icons/PlasmicIcon__Line52Svg"; // plasmic-import: K3BJz0Ncnf/icon
import framesvgQpMvVUojHj from "./images/framesvg.svg"; // plasmic-import: qpMvVUojHj/picture
import frame1SvgEaGE4Db from "./images/frame1Svg.svg"; // plasmic-import: -ea_gE4Db/picture
import iconTrashsvg2VJqtkHxb from "./images/iconTrashsvg.svg"; // plasmic-import: 2vJQTKHxb/picture

export const PlasmicPaymentMethodDirectBank__VariantProps = new Array();

export const PlasmicPaymentMethodDirectBank__ArgProps = new Array();

const __wrapUserFunction =
  globalThis.__PlasmicWrapUserFunction ?? ((loc, fn) => fn());

const __wrapUserPromise =
  globalThis.__PlasmicWrapUserPromise ??
  (async (loc, promise) => {
    return await promise;
  });

function PlasmicPaymentMethodDirectBank__RenderFunc(props) {
  const { variants, overrides, forNode } = props;
  const $ctx = ph.useDataEnv?.() || {};
  const args = React.useMemo(() => Object.assign({}, props.args), [props.args]);
  const $props = {
    ...args,
    ...variants
  };
  const refsRef = React.useRef({});
  const $refs = refsRef.current;
  const currentUser = p.useCurrentUser?.() || {};
  const [$queries, setDollarQueries] = React.useState({});
  const globalVariants = ensureGlobalVariants({
    screen: useScreenVariantsjc9Ly7HCoqclv()
  });
  return (
    <React.Fragment>
      <div className={projectcss.plasmic_page_wrapper}>
        <div
          data-plasmic-name={"root"}
          data-plasmic-override={overrides.root}
          data-plasmic-root={true}
          data-plasmic-for-node={forNode}
          className={classNames(
            projectcss.all,
            projectcss.root_reset,
            projectcss.plasmic_default_styles,
            projectcss.plasmic_mixins,
            projectcss.plasmic_tokens,
            sty.root
          )}
        >
          <div
            data-plasmic-name={"directBankTransfer"}
            data-plasmic-override={overrides.directBankTransfer}
            className={classNames(projectcss.all, sty.directBankTransfer)}
          >
            <div className={classNames(projectcss.all, sty.column__i9D5U)}>
              <Button
                className={classNames("__wab_instance", sty.button__ij79)}
                color={"softSand"}
                endIcon={
                  <XmarksvgIcon
                    className={classNames(projectcss.all, sty.svg__gtTmR)}
                    role={"img"}
                  />
                }
                shape={"rounded"}
                showEndIcon={true}
                startIcon={
                  <IconsvgIcon
                    className={classNames(projectcss.all, sty.svg__spDw7)}
                    role={"img"}
                  />
                }
              >
                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__tuXkQ
                  )}
                >
                  {"Edit"}
                </div>
              </Button>

              <h1
                data-plasmic-name={"h1"}
                data-plasmic-override={overrides.h1}
                className={classNames(
                  projectcss.all,
                  projectcss.h1,
                  projectcss.__wab_text,
                  sty.h1
                )}
              >
                {"direct bank transfer."}
              </h1>

              <div
                className={classNames(
                  projectcss.all,
                  projectcss.__wab_text,
                  sty.text__qckWk
                )}
              >
                {
                  "Take payments in person via BACS. More commonly known as direct bank/wire transfer."
                }
              </div>
            </div>

            <div className={classNames(projectcss.all, sty.column__vuR1H)}>
              <p.Stack
                as={"div"}
                hasGap={true}
                className={classNames(projectcss.all, sty.columns__tdxCl)}
              >
                <div className={classNames(projectcss.all, sty.column__oCik)}>
                  <Button2
                    className={classNames(
                      "__wab_instance",
                      sty.antdButton__rOflR
                    )}
                    size={"medium"}
                  >
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__dk5He
                      )}
                    >
                      {"Back"}
                    </div>
                  </Button2>
                </div>

                <div
                  className={classNames(projectcss.all, sty.column___8GaCi, "")}
                >
                  <Button
                    className={classNames("__wab_instance", sty.button__fYdTy)}
                    showStartIcon={true}
                    startIcon={
                      <IconsvgIcon
                        className={classNames(projectcss.all, sty.svg__qVEu)}
                        role={"img"}
                      />
                    }
                  >
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__tvLhd
                      )}
                    >
                      {"Save Changes"}
                    </div>
                  </Button>
                </div>
              </p.Stack>
            </div>
          </div>

          <div
            data-plasmic-name={"information"}
            data-plasmic-override={overrides.information}
            className={classNames(projectcss.all, sty.information)}
          >
            <div className={classNames(projectcss.all, sty.column__fdPhR)}>
              <h2
                className={classNames(
                  projectcss.all,
                  projectcss.h2,
                  projectcss.__wab_text,
                  sty.h2__x5T1J
                )}
              >
                {"information"}
              </h2>

              <h3
                className={classNames(
                  projectcss.all,
                  projectcss.h3,
                  projectcss.__wab_text,
                  sty.h3__yNIgA
                )}
              >
                {"This information showing to your user."}
              </h3>
            </div>
          </div>

          <div
            data-plasmic-name={"titleStatus"}
            data-plasmic-override={overrides.titleStatus}
            className={classNames(projectcss.all, sty.titleStatus)}
          >
            <div className={classNames(projectcss.all, sty.column__aHjB9)}>
              <p.Stack
                as={"div"}
                hasGap={true}
                className={classNames(projectcss.all, sty.freeBox__zYgk6)}
              >
                <h3
                  className={classNames(
                    projectcss.all,
                    projectcss.h3,
                    projectcss.__wab_text,
                    sty.h3__dyWho
                  )}
                >
                  {"Title"}
                </h3>

                <p.PlasmicImg
                  alt={""}
                  className={classNames(sty.img__sDUv2)}
                  displayHeight={"auto"}
                  displayMaxHeight={"none"}
                  displayMaxWidth={"100%"}
                  displayMinHeight={"0"}
                  displayMinWidth={"0"}
                  displayWidth={"12px"}
                  loading={"lazy"}
                  src={{
                    src: framesvgQpMvVUojHj,
                    fullWidth: 150,
                    fullHeight: 150,
                    aspectRatio: 1
                  }}
                />
              </p.Stack>

              <Input
                data-plasmic-name={"antdInput6"}
                data-plasmic-override={overrides.antdInput6}
                allowClear={false}
                aria-label={"Title"}
                bordered={true}
                className={classNames("__wab_instance", sty.antdInput6)}
                defaultValue={""}
                id={"Title"}
                name={"title"}
                placeholder={"Direct bank transfer"}
                size={"large"}
              />
            </div>

            <div className={classNames(projectcss.all, sty.column___8YInU)}>
              <h2
                className={classNames(
                  projectcss.all,
                  projectcss.h2,
                  projectcss.__wab_text,
                  sty.h2__k9Giy
                )}
              >
                {"status"}
              </h2>

              <Button2
                className={classNames("__wab_instance", sty.antdButton__p1PF5)}
                danger={false}
                shape={"default"}
                size={"large"}
                type={"default"}
              >
                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__dXLuH
                  )}
                >
                  {"Enable"}
                </div>
              </Button2>
            </div>
          </div>

          <div
            data-plasmic-name={"description"}
            data-plasmic-override={overrides.description}
            className={classNames(projectcss.all, sty.description)}
          >
            <div className={classNames(projectcss.all, sty.column__onbr)}>
              <p.Stack
                as={"div"}
                hasGap={true}
                className={classNames(projectcss.all, sty.freeBox__alKyS)}
              >
                <h3
                  className={classNames(
                    projectcss.all,
                    projectcss.h3,
                    projectcss.__wab_text,
                    sty.h3___8FYad
                  )}
                >
                  {"Description"}
                </h3>

                <p.PlasmicImg
                  alt={""}
                  className={classNames(sty.img__qDjZy)}
                  displayHeight={"auto"}
                  displayMaxHeight={"none"}
                  displayMaxWidth={"100%"}
                  displayMinHeight={"0"}
                  displayMinWidth={"0"}
                  displayWidth={"12px"}
                  loading={"lazy"}
                  src={{
                    src: framesvgQpMvVUojHj,
                    fullWidth: 150,
                    fullHeight: 150,
                    aspectRatio: 1
                  }}
                />
              </p.Stack>

              <TextArea
                allowClear={false}
                aria-label={"Pay with cash upon delivery."}
                aria-labelledby={"Pay with cash upon delivery."}
                className={classNames(
                  "__wab_instance",
                  sty.antdInputTextArea___7Evex
                )}
                name={"paywithcod"}
                placeholder={
                  "Make your payment directly into our bank account. Please use your Order ID as the payment reference. Your order will not be shipped until the funds have cleared in our account."
                }
                showCount={false}
              />
            </div>
          </div>

          <div
            data-plasmic-name={"instructions"}
            data-plasmic-override={overrides.instructions}
            className={classNames(projectcss.all, sty.instructions)}
          >
            <div className={classNames(projectcss.all, sty.column__qfC4M)}>
              <p.Stack
                as={"div"}
                hasGap={true}
                className={classNames(projectcss.all, sty.freeBox__gH7Md)}
              >
                <h3
                  className={classNames(
                    projectcss.all,
                    projectcss.h3,
                    projectcss.__wab_text,
                    sty.h3__rjIjN
                  )}
                >
                  {"Instructions"}
                </h3>

                <p.PlasmicImg
                  alt={""}
                  className={classNames(sty.img__g05AN)}
                  displayHeight={"auto"}
                  displayMaxHeight={"none"}
                  displayMaxWidth={"100%"}
                  displayMinHeight={"0"}
                  displayMinWidth={"0"}
                  displayWidth={"12px"}
                  loading={"lazy"}
                  src={{
                    src: framesvgQpMvVUojHj,
                    fullWidth: 150,
                    fullHeight: 150,
                    aspectRatio: 1
                  }}
                />
              </p.Stack>

              <TextArea
                allowClear={false}
                aria-label={"Pay with cash upon delivery."}
                aria-labelledby={"Pay with cash upon delivery."}
                className={classNames(
                  "__wab_instance",
                  sty.antdInputTextArea__vMhaT
                )}
                name={"paywithcod"}
                placeholder={"Add Instructions."}
                showCount={false}
              />
            </div>
          </div>

          <div
            data-plasmic-name={"accountDetails"}
            data-plasmic-override={overrides.accountDetails}
            className={classNames(projectcss.all, sty.accountDetails)}
          >
            <div className={classNames(projectcss.all, sty.column__revJf)}>
              <div className={classNames(projectcss.all, sty.columns__j4Cfc)}>
                <div className={classNames(projectcss.all, sty.column__l8CwT)}>
                  <p.Stack
                    as={"div"}
                    hasGap={true}
                    className={classNames(projectcss.all, sty.freeBox__tuby)}
                  >
                    <h3
                      className={classNames(
                        projectcss.all,
                        projectcss.h3,
                        projectcss.__wab_text,
                        sty.h3__yOanw
                      )}
                    >
                      {"Account details"}
                    </h3>
                  </p.Stack>
                </div>
              </div>

              <div
                data-plasmic-name={"row1"}
                data-plasmic-override={overrides.row1}
                className={classNames(projectcss.all, sty.row1)}
              >
                <div className={classNames(projectcss.all, sty.column__vyeAe)}>
                  <p.Stack
                    as={"div"}
                    hasGap={true}
                    className={classNames(projectcss.all, sty.freeBox__l6YcT)}
                  >
                    <p.PlasmicImg
                      alt={""}
                      className={classNames(sty.img__fEmIw)}
                      displayHeight={"auto"}
                      displayMaxHeight={"none"}
                      displayMaxWidth={"100%"}
                      displayMinHeight={"0"}
                      displayMinWidth={"0"}
                      displayWidth={"12px"}
                      loading={"lazy"}
                      src={{
                        src: frame1SvgEaGE4Db,
                        fullWidth: 75,
                        fullHeight: 150,
                        aspectRatio: 0.5
                      }}
                    />

                    <h3
                      className={classNames(
                        projectcss.all,
                        projectcss.h3,
                        projectcss.__wab_text,
                        sty.h3__tkTkM
                      )}
                    >
                      {"Your bank account name"}
                    </h3>
                  </p.Stack>
                </div>

                <div className={classNames(projectcss.all, sty.column__cVp0K)}>
                  <p.Stack
                    as={"div"}
                    hasGap={true}
                    className={classNames(projectcss.all, sty.freeBox__ppYxe)}
                  >
                    <h3
                      className={classNames(
                        projectcss.all,
                        projectcss.h3,
                        projectcss.__wab_text,
                        sty.h3__aGs8S
                      )}
                    >
                      {"123-456-789-0"}
                    </h3>
                  </p.Stack>
                </div>

                {(
                  hasVariant(globalVariants, "screen", "mobileOnly")
                    ? true
                    : true
                ) ? (
                  <div
                    className={classNames(projectcss.all, sty.column__lkx8X)}
                  >
                    {(
                      hasVariant(globalVariants, "screen", "mobileOnly")
                        ? true
                        : true
                    ) ? (
                      <p.Stack
                        as={"div"}
                        hasGap={true}
                        className={classNames(
                          projectcss.all,
                          sty.freeBox___8Ldyl
                        )}
                      >
                        <h3
                          className={classNames(
                            projectcss.all,
                            projectcss.h3,
                            projectcss.__wab_text,
                            sty.h3__vLlB4
                          )}
                        >
                          {"KASIKORN BANK"}
                        </h3>
                      </p.Stack>
                    ) : null}
                  </div>
                ) : null}

                <div className={classNames(projectcss.all, sty.column__rQmyD)}>
                  {true ? (
                    <p.Stack
                      as={"div"}
                      hasGap={true}
                      className={classNames(
                        projectcss.all,
                        sty.freeBox___7Hp7S
                      )}
                    >
                      <p.PlasmicImg
                        alt={""}
                        className={classNames(sty.img___3MXm)}
                        displayHeight={"auto"}
                        displayMaxHeight={"none"}
                        displayMaxWidth={"100%"}
                        displayMinHeight={"0"}
                        displayMinWidth={"0"}
                        displayWidth={"12px"}
                        loading={"lazy"}
                        src={{
                          src: iconTrashsvg2VJqtkHxb,
                          fullWidth: 122,
                          fullHeight: 150,
                          aspectRatio: 0.8125
                        }}
                      />
                    </p.Stack>
                  ) : null}
                </div>
              </div>

              <div
                data-plasmic-name={"row2"}
                data-plasmic-override={overrides.row2}
                className={classNames(projectcss.all, sty.row2)}
              >
                <div className={classNames(projectcss.all, sty.column__yOcF7)}>
                  <p.Stack
                    as={"div"}
                    hasGap={true}
                    className={classNames(projectcss.all, sty.freeBox__hQcV9)}
                  >
                    <p.PlasmicImg
                      alt={""}
                      className={classNames(sty.img__jCvNf)}
                      displayHeight={"auto"}
                      displayMaxHeight={"none"}
                      displayMaxWidth={"100%"}
                      displayMinHeight={"0"}
                      displayMinWidth={"0"}
                      displayWidth={"12px"}
                      loading={"lazy"}
                      src={{
                        src: frame1SvgEaGE4Db,
                        fullWidth: 75,
                        fullHeight: 150,
                        aspectRatio: 0.5
                      }}
                    />

                    <h3
                      className={classNames(
                        projectcss.all,
                        projectcss.h3,
                        projectcss.__wab_text,
                        sty.h3__z7Kph
                      )}
                    >
                      {"Your bank account name"}
                    </h3>
                  </p.Stack>
                </div>

                <div className={classNames(projectcss.all, sty.column__miI6)}>
                  <p.Stack
                    as={"div"}
                    hasGap={true}
                    className={classNames(projectcss.all, sty.freeBox__o41Wo)}
                  >
                    <h3
                      className={classNames(
                        projectcss.all,
                        projectcss.h3,
                        projectcss.__wab_text,
                        sty.h3___8TnS1
                      )}
                    >
                      {"123-456-789-0"}
                    </h3>
                  </p.Stack>
                </div>

                <div className={classNames(projectcss.all, sty.column__qpzUo)}>
                  {(
                    hasVariant(globalVariants, "screen", "mobileOnly")
                      ? true
                      : true
                  ) ? (
                    <p.Stack
                      as={"div"}
                      hasGap={true}
                      className={classNames(projectcss.all, sty.freeBox__t2UhH)}
                    >
                      <h3
                        className={classNames(
                          projectcss.all,
                          projectcss.h3,
                          projectcss.__wab_text,
                          sty.h3___1BJgx
                        )}
                      >
                        {"KASIKORN BANK"}
                      </h3>
                    </p.Stack>
                  ) : null}
                </div>

                <div className={classNames(projectcss.all, sty.column__bJqzv)}>
                  <p.Stack
                    as={"div"}
                    hasGap={true}
                    className={classNames(projectcss.all, sty.freeBox__k9O4)}
                  >
                    <p.PlasmicImg
                      alt={""}
                      className={classNames(sty.img__hfy3H)}
                      displayHeight={"auto"}
                      displayMaxHeight={"none"}
                      displayMaxWidth={"100%"}
                      displayMinHeight={"0"}
                      displayMinWidth={"0"}
                      displayWidth={"12px"}
                      loading={"lazy"}
                      src={{
                        src: iconTrashsvg2VJqtkHxb,
                        fullWidth: 122,
                        fullHeight: 150,
                        aspectRatio: 0.8125
                      }}
                    />
                  </p.Stack>
                </div>
              </div>

              <div
                data-plasmic-name={"row3"}
                data-plasmic-override={overrides.row3}
                className={classNames(projectcss.all, sty.row3)}
              >
                <div className={classNames(projectcss.all, sty.column__ozIo)}>
                  <p.Stack
                    as={"div"}
                    hasGap={true}
                    className={classNames(projectcss.all, sty.freeBox__fjJcy)}
                  >
                    <p.PlasmicImg
                      alt={""}
                      className={classNames(sty.img__eOkcs)}
                      displayHeight={"auto"}
                      displayMaxHeight={"none"}
                      displayMaxWidth={"100%"}
                      displayMinHeight={"0"}
                      displayMinWidth={"0"}
                      displayWidth={"12px"}
                      loading={"lazy"}
                      src={{
                        src: frame1SvgEaGE4Db,
                        fullWidth: 75,
                        fullHeight: 150,
                        aspectRatio: 0.5
                      }}
                    />

                    <h3
                      className={classNames(
                        projectcss.all,
                        projectcss.h3,
                        projectcss.__wab_text,
                        sty.h3__mpU9
                      )}
                    >
                      {"Your bank account name"}
                    </h3>
                  </p.Stack>
                </div>

                <div className={classNames(projectcss.all, sty.column__to1Gl)}>
                  <p.Stack
                    as={"div"}
                    hasGap={true}
                    className={classNames(projectcss.all, sty.freeBox__gtuUg)}
                  >
                    <h3
                      className={classNames(
                        projectcss.all,
                        projectcss.h3,
                        projectcss.__wab_text,
                        sty.h3__tr6KQ
                      )}
                    >
                      {"123-456-789-0"}
                    </h3>
                  </p.Stack>
                </div>

                <div className={classNames(projectcss.all, sty.column__fNoOw)}>
                  {(
                    hasVariant(globalVariants, "screen", "mobileOnly")
                      ? true
                      : true
                  ) ? (
                    <p.Stack
                      as={"div"}
                      hasGap={true}
                      className={classNames(
                        projectcss.all,
                        sty.freeBox___1U99S
                      )}
                    >
                      <h3
                        className={classNames(
                          projectcss.all,
                          projectcss.h3,
                          projectcss.__wab_text,
                          sty.h3__q3NoI
                        )}
                      >
                        {"KASIKORN BANK"}
                      </h3>
                    </p.Stack>
                  ) : null}
                </div>

                <div className={classNames(projectcss.all, sty.column__poXbD)}>
                  <p.Stack
                    as={"div"}
                    hasGap={true}
                    className={classNames(projectcss.all, sty.freeBox__eQzUe)}
                  >
                    <p.PlasmicImg
                      alt={""}
                      className={classNames(sty.img__eqObF)}
                      displayHeight={"auto"}
                      displayMaxHeight={"none"}
                      displayMaxWidth={"100%"}
                      displayMinHeight={"0"}
                      displayMinWidth={"0"}
                      displayWidth={"12px"}
                      loading={"lazy"}
                      src={{
                        src: iconTrashsvg2VJqtkHxb,
                        fullWidth: 122,
                        fullHeight: 150,
                        aspectRatio: 0.8125
                      }}
                    />
                  </p.Stack>
                </div>
              </div>

              <div
                data-plasmic-name={"row4"}
                data-plasmic-override={overrides.row4}
                className={classNames(projectcss.all, sty.row4)}
              >
                <div className={classNames(projectcss.all, sty.column__uV6Nl)}>
                  <p.Stack
                    as={"div"}
                    hasGap={true}
                    className={classNames(projectcss.all, sty.freeBox__dMVhg)}
                  >
                    <p.PlasmicImg
                      alt={""}
                      className={classNames(sty.img__ei7Tc)}
                      displayHeight={"auto"}
                      displayMaxHeight={"none"}
                      displayMaxWidth={"100%"}
                      displayMinHeight={"0"}
                      displayMinWidth={"0"}
                      displayWidth={"12px"}
                      loading={"lazy"}
                      src={{
                        src: frame1SvgEaGE4Db,
                        fullWidth: 75,
                        fullHeight: 150,
                        aspectRatio: 0.5
                      }}
                    />

                    <h3
                      className={classNames(
                        projectcss.all,
                        projectcss.h3,
                        projectcss.__wab_text,
                        sty.h3___5J8KW
                      )}
                    >
                      {"Your bank account name"}
                    </h3>
                  </p.Stack>
                </div>

                <div className={classNames(projectcss.all, sty.column__dBmJj)}>
                  <p.Stack
                    as={"div"}
                    hasGap={true}
                    className={classNames(projectcss.all, sty.freeBox___6KY7F)}
                  >
                    <h3
                      className={classNames(
                        projectcss.all,
                        projectcss.h3,
                        projectcss.__wab_text,
                        sty.h3__oJYlV
                      )}
                    >
                      {"123-456-789-0"}
                    </h3>
                  </p.Stack>
                </div>

                <div className={classNames(projectcss.all, sty.column__r9Bat)}>
                  {(
                    hasVariant(globalVariants, "screen", "mobileOnly")
                      ? true
                      : true
                  ) ? (
                    <p.Stack
                      as={"div"}
                      hasGap={true}
                      className={classNames(
                        projectcss.all,
                        sty.freeBox___2GgDr
                      )}
                    >
                      <h3
                        className={classNames(
                          projectcss.all,
                          projectcss.h3,
                          projectcss.__wab_text,
                          sty.h3__eV0T
                        )}
                      >
                        {"KASIKORN BANK"}
                      </h3>
                    </p.Stack>
                  ) : null}
                </div>

                <div className={classNames(projectcss.all, sty.column__urwhV)}>
                  <p.Stack
                    as={"div"}
                    hasGap={true}
                    className={classNames(projectcss.all, sty.freeBox__bB8O)}
                  >
                    <p.PlasmicImg
                      alt={""}
                      className={classNames(sty.img__oL4AG)}
                      displayHeight={"auto"}
                      displayMaxHeight={"none"}
                      displayMaxWidth={"100%"}
                      displayMinHeight={"0"}
                      displayMinWidth={"0"}
                      displayWidth={"12px"}
                      loading={"lazy"}
                      src={{
                        src: iconTrashsvg2VJqtkHxb,
                        fullWidth: 122,
                        fullHeight: 150,
                        aspectRatio: 0.8125
                      }}
                    />
                  </p.Stack>
                </div>
              </div>

              <div className={classNames(projectcss.all, sty.columns__zjCnq)}>
                <div
                  className={classNames(
                    projectcss.all,
                    sty.column__vmfFh,
                    "addBankAcc-Col"
                  )}
                >
                  <Button
                    className={classNames("__wab_instance", sty.button__t03Ye)}
                    color={"clear"}
                    endIcon={
                      <XmarksvgIcon
                        className={classNames(projectcss.all, sty.svg__kvVvs)}
                        role={"img"}
                      />
                    }
                    shape={"sharp"}
                    showStartIcon={true}
                    startIcon={
                      <IconsvgIcon
                        className={classNames(projectcss.all, sty.svg__u2Io)}
                        role={"img"}
                      />
                    }
                  >
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text___0Kd87
                      )}
                    >
                      {"Add bank account"}
                    </div>
                  </Button>
                </div>

                <div
                  className={classNames(projectcss.all, sty.column__a9BdM)}
                />

                <div
                  className={classNames(projectcss.all, sty.column__ae7Ff)}
                />

                <div
                  className={classNames(projectcss.all, sty.column___5AyA0)}
                />
              </div>

              <Line52SvgIcon
                className={classNames(projectcss.all, sty.svg__uxXno)}
                role={"img"}
              />
            </div>
          </div>

          <div
            data-plasmic-name={"confirmPayment"}
            data-plasmic-override={overrides.confirmPayment}
            className={classNames(projectcss.all, sty.confirmPayment)}
          >
            <div className={classNames(projectcss.all, sty.column__pqFkA)}>
              <p.Stack
                as={"div"}
                hasGap={true}
                className={classNames(projectcss.all, sty.freeBox___83Tcp)}
              >
                <h3
                  className={classNames(
                    projectcss.all,
                    projectcss.h3,
                    projectcss.__wab_text,
                    sty.h3__aq9Y9
                  )}
                >
                  {"Confirmed Payment Message"}
                </h3>

                <p.PlasmicImg
                  alt={""}
                  className={classNames(sty.img__n29Fe)}
                  displayHeight={"auto"}
                  displayMaxHeight={"none"}
                  displayMaxWidth={"100%"}
                  displayMinHeight={"0"}
                  displayMinWidth={"0"}
                  displayWidth={"12px"}
                  loading={"lazy"}
                  src={{
                    src: framesvgQpMvVUojHj,
                    fullWidth: 150,
                    fullHeight: 150,
                    aspectRatio: 1
                  }}
                />
              </p.Stack>

              <TextArea
                allowClear={false}
                aria-label={"The Payment was sent successfully!"}
                aria-labelledby={"The Payment was sent successfully!"}
                className={classNames(
                  "__wab_instance",
                  sty.antdInputTextArea__dVa2J
                )}
                name={"paymentsucessfully"}
                placeholder={"The Payment was sent successfully!"}
                showCount={false}
              />
            </div>
          </div>

          <div
            data-plasmic-name={"fromDateTime"}
            data-plasmic-override={overrides.fromDateTime}
            className={classNames(projectcss.all, sty.fromDateTime)}
          >
            <div className={classNames(projectcss.all, sty.column___5YYF)}>
              <p.Stack
                as={"div"}
                hasGap={true}
                className={classNames(projectcss.all, sty.freeBox__pads3)}
              >
                <h3
                  className={classNames(
                    projectcss.all,
                    projectcss.h3,
                    projectcss.__wab_text,
                    sty.h3__oqoAy
                  )}
                >
                  {"Form date time"}
                </h3>

                <p.PlasmicImg
                  alt={""}
                  className={classNames(sty.img__g1EV)}
                  displayHeight={"auto"}
                  displayMaxHeight={"none"}
                  displayMaxWidth={"100%"}
                  displayMinHeight={"0"}
                  displayMinWidth={"0"}
                  displayWidth={"12px"}
                  loading={"lazy"}
                  src={{
                    src: framesvgQpMvVUojHj,
                    fullWidth: 150,
                    fullHeight: 150,
                    aspectRatio: 1
                  }}
                />
              </p.Stack>

              <Checkbox
                className={classNames(
                  "__wab_instance",
                  sty.antdCheckbox___8Xn8D
                )}
              >
                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__rX7Jw
                  )}
                >
                  {"Enable/Disable Comfirm field Date Time"}
                </div>
              </Checkbox>
            </div>
          </div>

          <div
            data-plasmic-name={"paymentPage"}
            data-plasmic-override={overrides.paymentPage}
            className={classNames(projectcss.all, sty.paymentPage)}
          >
            <div className={classNames(projectcss.all, sty.column__qDopX)}>
              <p.Stack
                as={"div"}
                hasGap={true}
                className={classNames(projectcss.all, sty.freeBox__hWp1)}
              >
                <h3
                  className={classNames(
                    projectcss.all,
                    projectcss.h3,
                    projectcss.__wab_text,
                    sty.h3__yfV2A
                  )}
                >
                  {"Payment page"}
                </h3>

                <p.PlasmicImg
                  alt={""}
                  className={classNames(sty.img___9Ggq)}
                  displayHeight={"auto"}
                  displayMaxHeight={"none"}
                  displayMaxWidth={"100%"}
                  displayMinHeight={"0"}
                  displayMinWidth={"0"}
                  displayWidth={"12px"}
                  loading={"lazy"}
                  src={{
                    src: framesvgQpMvVUojHj,
                    fullWidth: 150,
                    fullHeight: 150,
                    aspectRatio: 1
                  }}
                />
              </p.Stack>

              <Select
                data-plasmic-name={"select"}
                data-plasmic-override={overrides.select}
                className={classNames("__wab_instance", sty.select)}
                placeholder={
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__beCbe
                    )}
                  >
                    {"Pending payment"}
                  </div>
                }
              />
            </div>
          </div>

          <div
            data-plasmic-name={"warningPaymentMessage"}
            data-plasmic-override={overrides.warningPaymentMessage}
            className={classNames(projectcss.all, sty.warningPaymentMessage)}
          >
            <div className={classNames(projectcss.all, sty.column__f9Vat)}>
              <p.Stack
                as={"div"}
                hasGap={true}
                className={classNames(projectcss.all, sty.freeBox__cAxaC)}
              >
                <h3
                  className={classNames(
                    projectcss.all,
                    projectcss.h3,
                    projectcss.__wab_text,
                    sty.h3__keRWn
                  )}
                >
                  {"Warning Payment Message"}
                </h3>

                <p.PlasmicImg
                  alt={""}
                  className={classNames(sty.img__ooKef)}
                  displayHeight={"auto"}
                  displayMaxHeight={"none"}
                  displayMaxWidth={"100%"}
                  displayMinHeight={"0"}
                  displayMinWidth={"0"}
                  displayWidth={"12px"}
                  loading={"lazy"}
                  src={{
                    src: framesvgQpMvVUojHj,
                    fullWidth: 150,
                    fullHeight: 150,
                    aspectRatio: 1
                  }}
                />
              </p.Stack>

              <TextArea
                allowClear={false}
                aria-label={"Warning Payment Message"}
                aria-labelledby={"Warning Payment Message"}
                className={classNames(
                  "__wab_instance",
                  sty.antdInputTextArea__ptDwz
                )}
                name={"warningmessage"}
                placeholder={"The Payment was sent successfully!"}
                showCount={false}
              />
            </div>
          </div>

          <div
            data-plasmic-name={"fromDateTime2"}
            data-plasmic-override={overrides.fromDateTime2}
            className={classNames(projectcss.all, sty.fromDateTime2)}
          >
            <div className={classNames(projectcss.all, sty.column__jk5Mq)}>
              <p.Stack
                as={"div"}
                hasGap={true}
                className={classNames(projectcss.all, sty.freeBox__t6Kxj)}
              >
                <h3
                  className={classNames(
                    projectcss.all,
                    projectcss.h3,
                    projectcss.__wab_text,
                    sty.h3___6PaZ
                  )}
                >
                  {"Delete Option"}
                </h3>

                <p.PlasmicImg
                  alt={""}
                  className={classNames(sty.img__lcfSo)}
                  displayHeight={"auto"}
                  displayMaxHeight={"none"}
                  displayMaxWidth={"100%"}
                  displayMinHeight={"0"}
                  displayMinWidth={"0"}
                  displayWidth={"12px"}
                  loading={"lazy"}
                  src={{
                    src: framesvgQpMvVUojHj,
                    fullWidth: 150,
                    fullHeight: 150,
                    aspectRatio: 1
                  }}
                />
              </p.Stack>

              <Checkbox
                className={classNames(
                  "__wab_instance",
                  sty.antdCheckbox__i6Lr6
                )}
              >
                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__mZr7O
                  )}
                >
                  {"Delete plugin option after deactivate this plugin"}
                </div>
              </Checkbox>
            </div>
          </div>
        </div>
      </div>
    </React.Fragment>
  );
}

const PlasmicDescendants = {
  root: [
    "root",
    "directBankTransfer",
    "h1",
    "information",
    "titleStatus",
    "antdInput6",
    "description",
    "instructions",
    "accountDetails",
    "row1",
    "row2",
    "row3",
    "row4",
    "confirmPayment",
    "fromDateTime",
    "paymentPage",
    "select",
    "warningPaymentMessage",
    "fromDateTime2"
  ],

  directBankTransfer: ["directBankTransfer", "h1"],
  h1: ["h1"],
  information: ["information"],
  titleStatus: ["titleStatus", "antdInput6"],
  antdInput6: ["antdInput6"],
  description: ["description"],
  instructions: ["instructions"],
  accountDetails: ["accountDetails", "row1", "row2", "row3", "row4"],
  row1: ["row1"],
  row2: ["row2"],
  row3: ["row3"],
  row4: ["row4"],
  confirmPayment: ["confirmPayment"],
  fromDateTime: ["fromDateTime"],
  paymentPage: ["paymentPage", "select"],
  select: ["select"],
  warningPaymentMessage: ["warningPaymentMessage"],
  fromDateTime2: ["fromDateTime2"]
};

function makeNodeComponent(nodeName) {
  const func = function (props) {
    const { variants, args, overrides } = React.useMemo(
      () =>
        deriveRenderOpts(props, {
          name: nodeName,
          descendantNames: [...PlasmicDescendants[nodeName]],
          internalArgPropNames: PlasmicPaymentMethodDirectBank__ArgProps,
          internalVariantPropNames: PlasmicPaymentMethodDirectBank__VariantProps
        }),
      [props, nodeName]
    );

    return PlasmicPaymentMethodDirectBank__RenderFunc({
      variants,
      args,
      overrides,
      forNode: nodeName
    });
  };
  if (nodeName === "root") {
    func.displayName = "PlasmicPaymentMethodDirectBank";
  } else {
    func.displayName = `PlasmicPaymentMethodDirectBank.${nodeName}`;
  }
  return func;
}

export const PlasmicPaymentMethodDirectBank = Object.assign(
  // Top-level PlasmicPaymentMethodDirectBank renders the root element
  makeNodeComponent("root"),
  {
    // Helper components rendering sub-elements
    directBankTransfer: makeNodeComponent("directBankTransfer"),
    h1: makeNodeComponent("h1"),
    information: makeNodeComponent("information"),
    titleStatus: makeNodeComponent("titleStatus"),
    antdInput6: makeNodeComponent("antdInput6"),
    description: makeNodeComponent("description"),
    instructions: makeNodeComponent("instructions"),
    accountDetails: makeNodeComponent("accountDetails"),
    row1: makeNodeComponent("row1"),
    row2: makeNodeComponent("row2"),
    row3: makeNodeComponent("row3"),
    row4: makeNodeComponent("row4"),
    confirmPayment: makeNodeComponent("confirmPayment"),
    fromDateTime: makeNodeComponent("fromDateTime"),
    paymentPage: makeNodeComponent("paymentPage"),
    select: makeNodeComponent("select"),
    warningPaymentMessage: makeNodeComponent("warningPaymentMessage"),
    fromDateTime2: makeNodeComponent("fromDateTime2"),
    // Metadata about props expected for PlasmicPaymentMethodDirectBank
    internalVariantProps: PlasmicPaymentMethodDirectBank__VariantProps,
    internalArgProps: PlasmicPaymentMethodDirectBank__ArgProps,
    // Page metadata
    pageMetadata: {
      title: "",
      description: "",
      ogImageSrc: "",
      canonical: ""
    }
  }
);

export default PlasmicPaymentMethodDirectBank;
/* prettier-ignore-end */
