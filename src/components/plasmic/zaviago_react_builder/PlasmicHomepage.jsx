// @ts-nocheck
/* eslint-disable */
/* tslint:disable */
/* prettier-ignore-start */
/** @jsxRuntime classic */
/** @jsx createPlasmicElementProxy */
/** @jsxFrag React.Fragment */
// This class is auto-generated by Plasmic; please do not edit!
// Plasmic Project: gVLjp5jEanpB9JmP1wfhu5
// Component: NsgmzO0LTwr1
import * as React from "react";
import * as p from "@plasmicapp/react-web";
import * as ph from "@plasmicapp/host";
import {
  classNames,
  createPlasmicElementProxy,
  deriveRenderOpts
} from "@plasmicapp/react-web";
import Button from "../../Button"; // plasmic-import: OiEpCGxwidZ/component
import Switch from "../../Switch"; // plasmic-import: II68hkYzZ61/component
import Input from "antd/lib/input"; // plasmic-import: tO9wrxr8Nbb/codeComponent
import TextArea from "antd/lib/input/TextArea"; // plasmic-import: ZJIPHLoTjkN/codeComponent
import Button2 from "antd/lib/button"; // plasmic-import: kv6Mk_JNYw/codeComponent
import Switch2 from "antd/lib/switch"; // plasmic-import: tRueht1jub/codeComponent
import Select from "../../Select"; // plasmic-import: I-YmR_8FdnC/component
import "@plasmicapp/react-web/lib/plasmic.css";
import projectcss from "./plasmic_zaviago_react_builder.module.css"; // plasmic-import: gVLjp5jEanpB9JmP1wfhu5/projectcss
import sty from "./PlasmicHomepage.module.css"; // plasmic-import: NsgmzO0LTwr1/css
import VectorIcon from "./icons/PlasmicIcon__Vector"; // plasmic-import: yb5pEuxDn/icon
import Vector2Icon from "./icons/PlasmicIcon__Vector2"; // plasmic-import: kYLBy02GU3/icon
import Line48Icon from "./icons/PlasmicIcon__Line48"; // plasmic-import: X3Hb9awko/icon
import frameJZnt0KwTp from "./images/frame.svg"; // plasmic-import: jZnt0KwTP/picture

export const PlasmicHomepage__VariantProps = new Array();

export const PlasmicHomepage__ArgProps = new Array();

const __wrapUserFunction =
  globalThis.__PlasmicWrapUserFunction ?? ((loc, fn) => fn());

const __wrapUserPromise =
  globalThis.__PlasmicWrapUserPromise ??
  (async (loc, promise) => {
    return await promise;
  });

function PlasmicHomepage__RenderFunc(props) {
  const { variants, overrides, forNode } = props;
  const $ctx = ph.useDataEnv?.() || {};
  const args = React.useMemo(() => Object.assign({}, props.args), [props.args]);
  const $props = {
    ...args,
    ...variants
  };
  const refsRef = React.useRef({});
  const $refs = refsRef.current;
  const currentUser = p.useCurrentUser?.() || {};
  const [$queries, setDollarQueries] = React.useState({});
  return (
    <React.Fragment>
      <div className={projectcss.plasmic_page_wrapper}>
        <div
          data-plasmic-name={"root"}
          data-plasmic-override={overrides.root}
          data-plasmic-root={true}
          data-plasmic-for-node={forNode}
          className={classNames(
            projectcss.all,
            projectcss.root_reset,
            projectcss.plasmic_default_styles,
            projectcss.plasmic_mixins,
            projectcss.plasmic_tokens,
            sty.root
          )}
        >
          <div className={classNames(projectcss.all, sty.columns__jKtiQ)}>
            <div className={classNames(projectcss.all, sty.column__td0Ja)}>
              <h1
                data-plasmic-name={"h1"}
                data-plasmic-override={overrides.h1}
                className={classNames(
                  projectcss.all,
                  projectcss.h1,
                  projectcss.__wab_text,
                  sty.h1
                )}
              >
                {"Product."}
              </h1>
            </div>

            <div className={classNames(projectcss.all, sty.column__vSvIg)} />
          </div>

          <div className={classNames(projectcss.all, sty.columns___5I3Jf)}>
            <div className={classNames(projectcss.all, sty.column__ruIbS)}>
              <h2
                className={classNames(
                  projectcss.all,
                  projectcss.h2,
                  projectcss.__wab_text,
                  sty.h2___8RTdV
                )}
              >
                {"general detail"}
              </h2>

              <h3
                className={classNames(
                  projectcss.all,
                  projectcss.h3,
                  projectcss.__wab_text,
                  sty.h3__gXyZj
                )}
              >
                {"Images"}
              </h3>

              <h3
                className={classNames(
                  projectcss.all,
                  projectcss.h3,
                  projectcss.__wab_text,
                  sty.h3__dFdIf
                )}
              >
                {"Add up to 10 images to your product."}
              </h3>

              <div
                data-plasmic-name={"mediaAdder"}
                data-plasmic-override={overrides.mediaAdder}
                className={classNames(projectcss.all, sty.mediaAdder)}
              >
                <div
                  data-plasmic-name={"addImage"}
                  data-plasmic-override={overrides.addImage}
                  className={classNames(projectcss.all, sty.addImage)}
                >
                  <div
                    data-plasmic-name={"rectangle707"}
                    data-plasmic-override={overrides.rectangle707}
                    className={classNames(projectcss.all, sty.rectangle707)}
                  />

                  <VectorIcon
                    className={classNames(projectcss.all, sty.svg__d79Ie)}
                    role={"img"}
                  />

                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__qrmHj
                    )}
                  >
                    {"Add media"}
                  </div>
                </div>

                <div
                  data-plasmic-name={"addImage2"}
                  data-plasmic-override={overrides.addImage2}
                  className={classNames(projectcss.all, sty.addImage2)}
                >
                  <div
                    data-plasmic-name={"rectangle708"}
                    data-plasmic-override={overrides.rectangle708}
                    className={classNames(projectcss.all, sty.rectangle708)}
                  />

                  <VectorIcon
                    className={classNames(projectcss.all, sty.svg__sMId)}
                    role={"img"}
                  />

                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__aomws
                    )}
                  >
                    {"Add media"}
                  </div>
                </div>

                <div
                  data-plasmic-name={"addImage3"}
                  data-plasmic-override={overrides.addImage3}
                  className={classNames(projectcss.all, sty.addImage3)}
                >
                  <div
                    data-plasmic-name={"rectangle709"}
                    data-plasmic-override={overrides.rectangle709}
                    className={classNames(projectcss.all, sty.rectangle709)}
                  />

                  <VectorIcon
                    className={classNames(projectcss.all, sty.svg___6EGyd)}
                    role={"img"}
                  />

                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text___12Xb6
                    )}
                  >
                    {"Add media"}
                  </div>
                </div>

                <div
                  data-plasmic-name={"addImage4"}
                  data-plasmic-override={overrides.addImage4}
                  className={classNames(projectcss.all, sty.addImage4)}
                >
                  <div
                    data-plasmic-name={"rectangle710"}
                    data-plasmic-override={overrides.rectangle710}
                    className={classNames(projectcss.all, sty.rectangle710)}
                  />

                  <VectorIcon
                    className={classNames(projectcss.all, sty.svg__kOz0W)}
                    role={"img"}
                  />

                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__j6Kqx
                    )}
                  >
                    {"Add media"}
                  </div>
                </div>

                <div
                  data-plasmic-name={"addImage5"}
                  data-plasmic-override={overrides.addImage5}
                  className={classNames(projectcss.all, sty.addImage5)}
                >
                  <div
                    data-plasmic-name={"rectangle711"}
                    data-plasmic-override={overrides.rectangle711}
                    className={classNames(projectcss.all, sty.rectangle711)}
                  />

                  <VectorIcon
                    className={classNames(projectcss.all, sty.svg__gp7BD)}
                    role={"img"}
                  />

                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__mnjqc
                    )}
                  >
                    {"Add media"}
                  </div>
                </div>

                <div
                  data-plasmic-name={"addImage6"}
                  data-plasmic-override={overrides.addImage6}
                  className={classNames(projectcss.all, sty.addImage6)}
                >
                  <div
                    data-plasmic-name={"rectangle712"}
                    data-plasmic-override={overrides.rectangle712}
                    className={classNames(projectcss.all, sty.rectangle712)}
                  />

                  <VectorIcon
                    className={classNames(projectcss.all, sty.svg__wt3Lq)}
                    role={"img"}
                  />

                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__nclWd
                    )}
                  >
                    {"Add media"}
                  </div>
                </div>

                <div
                  data-plasmic-name={"addCover"}
                  data-plasmic-override={overrides.addCover}
                  className={classNames(projectcss.all, sty.addCover)}
                >
                  <div
                    data-plasmic-name={"group47943"}
                    data-plasmic-override={overrides.group47943}
                    className={classNames(projectcss.all, sty.group47943)}
                  >
                    <div
                      data-plasmic-name={"group1865"}
                      data-plasmic-override={overrides.group1865}
                      className={classNames(projectcss.all, sty.group1865)}
                    >
                      <div
                        data-plasmic-name={"rectangle669"}
                        data-plasmic-override={overrides.rectangle669}
                        className={classNames(projectcss.all, sty.rectangle669)}
                      />

                      {false ? (
                        <div
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text__nO9JL
                          )}
                        >
                          {"image"}
                        </div>
                      ) : null}
                    </div>
                  </div>

                  <div
                    data-plasmic-name={"group47942"}
                    data-plasmic-override={overrides.group47942}
                    className={classNames(projectcss.all, sty.group47942)}
                  >
                    <Vector2Icon
                      className={classNames(projectcss.all, sty.svg__bbv3A)}
                      role={"img"}
                    />

                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__pDuBm
                      )}
                    >
                      {"Add Cover"}
                    </div>
                  </div>
                </div>
              </div>

              <Button
                data-plasmic-name={"button"}
                data-plasmic-override={overrides.button}
                className={classNames("__wab_instance", sty.button)}
                color={"softRed"}
                shape={"rounded"}
                size={"minimal"}
              />

              <Switch
                data-plasmic-name={"_switch"}
                data-plasmic-override={overrides._switch}
                className={classNames("__wab_instance", sty._switch)}
              />

              <h3
                className={classNames(
                  projectcss.all,
                  projectcss.h3,
                  projectcss.__wab_text,
                  sty.h3__blpaG
                )}
              >
                {"Title"}
              </h3>

              <Input
                data-plasmic-name={"antdInput"}
                data-plasmic-override={overrides.antdInput}
                allowClear={false}
                aria-label={"Title"}
                bordered={true}
                className={classNames("__wab_instance", sty.antdInput)}
                defaultValue={""}
                id={"Title"}
                name={"title"}
                placeholder={"Jacket, Sunglasses..."}
                size={"large"}
              />

              <h3
                className={classNames(
                  projectcss.all,
                  projectcss.h3,
                  projectcss.__wab_text,
                  sty.h3__mxX72
                )}
              >
                {"Description"}
              </h3>

              <TextArea
                data-plasmic-name={"antdInputTextArea"}
                data-plasmic-override={overrides.antdInputTextArea}
                className={classNames("__wab_instance", sty.antdInputTextArea)}
                defaultValue={""}
                name={""}
                placeholder={
                  "Give your product a short and clear description. 120-160 characters is the recommended length for search engines...."
                }
                showCount={true}
              />

              <h3
                className={classNames(
                  projectcss.all,
                  projectcss.h3,
                  projectcss.__wab_text,
                  sty.h3___50U5Z
                )}
              >
                {"SKU"}
              </h3>

              <Input
                data-plasmic-name={"antdInput2"}
                data-plasmic-override={overrides.antdInput2}
                allowClear={false}
                aria-label={"Title"}
                bordered={true}
                className={classNames("__wab_instance", sty.antdInput2)}
                defaultValue={""}
                id={"Title"}
                name={"title"}
                placeholder={"Add your product SKU number..."}
                size={"large"}
              />

              <h3
                className={classNames(
                  projectcss.all,
                  projectcss.h3,
                  projectcss.__wab_text,
                  sty.h3__qsOjZ
                )}
              >
                {"Category"}
              </h3>
            </div>

            <div className={classNames(projectcss.all, sty.column__qzl1Z)}>
              <h2
                className={classNames(
                  projectcss.all,
                  projectcss.h2,
                  projectcss.__wab_text,
                  sty.h2__tRvMi
                )}
              >
                {"status"}
              </h2>

              <Button2
                data-plasmic-name={"antdButton"}
                data-plasmic-override={overrides.antdButton}
                className={classNames("__wab_instance", sty.antdButton)}
                danger={false}
                shape={"default"}
                size={"large"}
                type={"default"}
              >
                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text___3G93F
                  )}
                >
                  {"Published"}
                </div>
              </Button2>

              <div className={classNames(projectcss.all, sty.columns__tWAp)}>
                <div className={classNames(projectcss.all, sty.column__jYveo)}>
                  <Line48Icon
                    className={classNames(projectcss.all, sty.svg__emsZb)}
                    role={"img"}
                  />

                  <h2
                    className={classNames(
                      projectcss.all,
                      projectcss.h2,
                      projectcss.__wab_text,
                      sty.h2__muQw8
                    )}
                  >
                    {"sync marketplace"}
                  </h2>

                  <p.Stack
                    as={"div"}
                    data-plasmic-name={"frame1956"}
                    data-plasmic-override={overrides.frame1956}
                    hasGap={true}
                    className={classNames(projectcss.all, sty.frame1956)}
                  >
                    <p.Stack
                      as={"div"}
                      data-plasmic-name={"marketplaceIcon"}
                      data-plasmic-override={overrides.marketplaceIcon}
                      hasGap={true}
                      className={classNames(
                        projectcss.all,
                        sty.marketplaceIcon
                      )}
                    >
                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__rxDDp
                        )}
                      >
                        {"globe"}
                      </div>
                    </p.Stack>

                    <div
                      data-plasmic-name={"image113"}
                      data-plasmic-override={overrides.image113}
                      className={classNames(projectcss.all, sty.image113)}
                    />

                    <div
                      data-plasmic-name={"image114"}
                      data-plasmic-override={overrides.image114}
                      className={classNames(projectcss.all, sty.image114)}
                    />

                    <div
                      data-plasmic-name={"image115"}
                      data-plasmic-override={overrides.image115}
                      className={classNames(projectcss.all, sty.image115)}
                    />

                    <div
                      data-plasmic-name={"image116"}
                      data-plasmic-override={overrides.image116}
                      className={classNames(projectcss.all, sty.image116)}
                    />
                  </p.Stack>
                </div>
              </div>

              <p.Stack
                as={"div"}
                hasGap={true}
                className={classNames(projectcss.all, sty.freeBox__s57B3)}
              >
                <h3
                  className={classNames(
                    projectcss.all,
                    projectcss.h3,
                    projectcss.__wab_text,
                    sty.h3___8Oq6
                  )}
                >
                  {"Available in 2 out of 5 sales channels."}
                </h3>

                <p.Stack
                  as={"div"}
                  data-plasmic-name={"frame2138"}
                  data-plasmic-override={overrides.frame2138}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.frame2138)}
                >
                  <p.Stack
                    as={"div"}
                    data-plasmic-name={"frame2137"}
                    data-plasmic-override={overrides.frame2137}
                    hasGap={true}
                    className={classNames(projectcss.all, sty.frame2137)}
                  >
                    <div
                      className={classNames(projectcss.all, sty.freeBox___2Hs5)}
                    >
                      <p.PlasmicImg
                        data-plasmic-name={"img"}
                        data-plasmic-override={overrides.img}
                        alt={""}
                        className={classNames(sty.img)}
                        displayHeight={"20px"}
                        displayMaxHeight={"none"}
                        displayMaxWidth={"100%"}
                        displayMinHeight={"0"}
                        displayMinWidth={"0"}
                        displayWidth={"20px"}
                        loading={"lazy"}
                        src={{
                          src: frameJZnt0KwTp,
                          fullWidth: 20,
                          fullHeight: 20,
                          aspectRatio: 1
                        }}
                      />
                    </div>

                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text___3MstE
                      )}
                    >
                      {"Manage Multi Channels"}
                    </div>
                  </p.Stack>
                </p.Stack>

                <Line48Icon
                  className={classNames(projectcss.all, sty.svg__pvj3O)}
                  role={"img"}
                />
              </p.Stack>

              <div
                className={classNames(
                  projectcss.all,
                  projectcss.__wab_text,
                  sty.text__ebxwA
                )}
              >
                {"pricing"}
              </div>

              <h3
                className={classNames(
                  projectcss.all,
                  projectcss.h3,
                  projectcss.__wab_text,
                  sty.h3__n3TW
                )}
              >
                {"Configure the pricing for this product."}
              </h3>

              <div className={classNames(projectcss.all, sty.columns__dOfp1)}>
                <div className={classNames(projectcss.all, sty.column__oiXnl)}>
                  <h3
                    className={classNames(
                      projectcss.all,
                      projectcss.h3,
                      projectcss.__wab_text,
                      sty.h3__q1N09
                    )}
                  >
                    {"Normal price"}
                  </h3>

                  <Input
                    data-plasmic-name={"antdInput3"}
                    data-plasmic-override={overrides.antdInput3}
                    allowClear={false}
                    aria-label={"Title"}
                    bordered={true}
                    className={classNames("__wab_instance", sty.antdInput3)}
                    defaultValue={""}
                    id={"Title"}
                    name={"title"}
                    placeholder={"100..."}
                    size={"large"}
                  />
                </div>

                <div className={classNames(projectcss.all, sty.column__aCBaY)}>
                  <h3
                    className={classNames(
                      projectcss.all,
                      projectcss.h3,
                      projectcss.__wab_text,
                      sty.h3__dc3Qe
                    )}
                  >
                    {"Cost of product"}
                  </h3>

                  <Input
                    data-plasmic-name={"antdInput4"}
                    data-plasmic-override={overrides.antdInput4}
                    allowClear={false}
                    aria-label={"Title"}
                    bordered={true}
                    className={classNames("__wab_instance", sty.antdInput4)}
                    defaultValue={""}
                    id={"Title"}
                    name={"title"}
                    placeholder={"100..."}
                    size={"large"}
                  />
                </div>
              </div>

              <p.Stack
                as={"div"}
                hasGap={true}
                className={classNames(projectcss.all, sty.freeBox__plamW)}
              >
                <Switch2
                  data-plasmic-name={"antdSwitch"}
                  data-plasmic-override={overrides.antdSwitch}
                  autoFocus={true}
                  className={classNames("__wab_instance", sty.antdSwitch)}
                  defaultChecked={false}
                  disabled={false}
                  loading={false}
                  size={"default"}
                />

                <h3
                  className={classNames(
                    projectcss.all,
                    projectcss.h3,
                    projectcss.__wab_text,
                    sty.h3__euMBp
                  )}
                >
                  {"Instant discount"}
                </h3>
              </p.Stack>

              <Line48Icon
                className={classNames(projectcss.all, sty.svg__pXAzn)}
                role={"img"}
              />

              <div
                className={classNames(
                  projectcss.all,
                  projectcss.__wab_text,
                  sty.text__foSfc
                )}
              >
                {"inventory"}
              </div>

              <h3
                className={classNames(
                  projectcss.all,
                  projectcss.h3,
                  projectcss.__wab_text,
                  sty.h3__jGi9Z
                )}
              >
                {"Configure the inventory and stock for this product."}
              </h3>

              <div className={classNames(projectcss.all, sty.columns__vRt5R)}>
                <div className={classNames(projectcss.all, sty.column__l7Dts)}>
                  <h3
                    className={classNames(
                      projectcss.all,
                      projectcss.h3,
                      projectcss.__wab_text,
                      sty.h3__q2818
                    )}
                  >
                    {"Stock"}
                  </h3>

                  <Input
                    data-plasmic-name={"antdInput5"}
                    data-plasmic-override={overrides.antdInput5}
                    allowClear={false}
                    aria-label={"Title"}
                    bordered={true}
                    className={classNames("__wab_instance", sty.antdInput5)}
                    defaultValue={""}
                    id={"Title"}
                    name={"title"}
                    placeholder={"100..."}
                    size={"large"}
                  />
                </div>

                <div className={classNames(projectcss.all, sty.column__tQfD)}>
                  <h3
                    className={classNames(
                      projectcss.all,
                      projectcss.h3,
                      projectcss.__wab_text,
                      sty.h3__hoWmt
                    )}
                  >
                    {"Status"}
                  </h3>

                  <Select
                    data-plasmic-name={"select"}
                    data-plasmic-override={overrides.select}
                    className={classNames("__wab_instance", sty.select)}
                    placeholder={
                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__kWsx
                        )}
                      >
                        {"Select…"}
                      </div>
                    }
                  />
                </div>
              </div>
            </div>
          </div>
        </div>
      </div>
    </React.Fragment>
  );
}

const PlasmicDescendants = {
  root: [
    "root",
    "h1",
    "mediaAdder",
    "addImage",
    "rectangle707",
    "addImage2",
    "rectangle708",
    "addImage3",
    "rectangle709",
    "addImage4",
    "rectangle710",
    "addImage5",
    "rectangle711",
    "addImage6",
    "rectangle712",
    "addCover",
    "group47943",
    "group1865",
    "rectangle669",
    "group47942",
    "button",
    "_switch",
    "antdInput",
    "antdInputTextArea",
    "antdInput2",
    "antdButton",
    "frame1956",
    "marketplaceIcon",
    "image113",
    "image114",
    "image115",
    "image116",
    "frame2138",
    "frame2137",
    "img",
    "antdInput3",
    "antdInput4",
    "antdSwitch",
    "antdInput5",
    "select"
  ],

  h1: ["h1"],
  mediaAdder: [
    "mediaAdder",
    "addImage",
    "rectangle707",
    "addImage2",
    "rectangle708",
    "addImage3",
    "rectangle709",
    "addImage4",
    "rectangle710",
    "addImage5",
    "rectangle711",
    "addImage6",
    "rectangle712",
    "addCover",
    "group47943",
    "group1865",
    "rectangle669",
    "group47942"
  ],

  addImage: ["addImage", "rectangle707"],
  rectangle707: ["rectangle707"],
  addImage2: ["addImage2", "rectangle708"],
  rectangle708: ["rectangle708"],
  addImage3: ["addImage3", "rectangle709"],
  rectangle709: ["rectangle709"],
  addImage4: ["addImage4", "rectangle710"],
  rectangle710: ["rectangle710"],
  addImage5: ["addImage5", "rectangle711"],
  rectangle711: ["rectangle711"],
  addImage6: ["addImage6", "rectangle712"],
  rectangle712: ["rectangle712"],
  addCover: [
    "addCover",
    "group47943",
    "group1865",
    "rectangle669",
    "group47942"
  ],

  group47943: ["group47943", "group1865", "rectangle669"],
  group1865: ["group1865", "rectangle669"],
  rectangle669: ["rectangle669"],
  group47942: ["group47942"],
  button: ["button"],
  _switch: ["_switch"],
  antdInput: ["antdInput"],
  antdInputTextArea: ["antdInputTextArea"],
  antdInput2: ["antdInput2"],
  antdButton: ["antdButton"],
  frame1956: [
    "frame1956",
    "marketplaceIcon",
    "image113",
    "image114",
    "image115",
    "image116"
  ],

  marketplaceIcon: ["marketplaceIcon"],
  image113: ["image113"],
  image114: ["image114"],
  image115: ["image115"],
  image116: ["image116"],
  frame2138: ["frame2138", "frame2137", "img"],
  frame2137: ["frame2137", "img"],
  img: ["img"],
  antdInput3: ["antdInput3"],
  antdInput4: ["antdInput4"],
  antdSwitch: ["antdSwitch"],
  antdInput5: ["antdInput5"],
  select: ["select"]
};

function makeNodeComponent(nodeName) {
  const func = function (props) {
    const { variants, args, overrides } = React.useMemo(
      () =>
        deriveRenderOpts(props, {
          name: nodeName,
          descendantNames: [...PlasmicDescendants[nodeName]],
          internalArgPropNames: PlasmicHomepage__ArgProps,
          internalVariantPropNames: PlasmicHomepage__VariantProps
        }),
      [props, nodeName]
    );

    return PlasmicHomepage__RenderFunc({
      variants,
      args,
      overrides,
      forNode: nodeName
    });
  };
  if (nodeName === "root") {
    func.displayName = "PlasmicHomepage";
  } else {
    func.displayName = `PlasmicHomepage.${nodeName}`;
  }
  return func;
}

export const PlasmicHomepage = Object.assign(
  // Top-level PlasmicHomepage renders the root element
  makeNodeComponent("root"),
  {
    // Helper components rendering sub-elements
    h1: makeNodeComponent("h1"),
    mediaAdder: makeNodeComponent("mediaAdder"),
    addImage: makeNodeComponent("addImage"),
    rectangle707: makeNodeComponent("rectangle707"),
    addImage2: makeNodeComponent("addImage2"),
    rectangle708: makeNodeComponent("rectangle708"),
    addImage3: makeNodeComponent("addImage3"),
    rectangle709: makeNodeComponent("rectangle709"),
    addImage4: makeNodeComponent("addImage4"),
    rectangle710: makeNodeComponent("rectangle710"),
    addImage5: makeNodeComponent("addImage5"),
    rectangle711: makeNodeComponent("rectangle711"),
    addImage6: makeNodeComponent("addImage6"),
    rectangle712: makeNodeComponent("rectangle712"),
    addCover: makeNodeComponent("addCover"),
    group47943: makeNodeComponent("group47943"),
    group1865: makeNodeComponent("group1865"),
    rectangle669: makeNodeComponent("rectangle669"),
    group47942: makeNodeComponent("group47942"),
    button: makeNodeComponent("button"),
    _switch: makeNodeComponent("_switch"),
    antdInput: makeNodeComponent("antdInput"),
    antdInputTextArea: makeNodeComponent("antdInputTextArea"),
    antdInput2: makeNodeComponent("antdInput2"),
    antdButton: makeNodeComponent("antdButton"),
    frame1956: makeNodeComponent("frame1956"),
    marketplaceIcon: makeNodeComponent("marketplaceIcon"),
    image113: makeNodeComponent("image113"),
    image114: makeNodeComponent("image114"),
    image115: makeNodeComponent("image115"),
    image116: makeNodeComponent("image116"),
    frame2138: makeNodeComponent("frame2138"),
    frame2137: makeNodeComponent("frame2137"),
    img: makeNodeComponent("img"),
    antdInput3: makeNodeComponent("antdInput3"),
    antdInput4: makeNodeComponent("antdInput4"),
    antdSwitch: makeNodeComponent("antdSwitch"),
    antdInput5: makeNodeComponent("antdInput5"),
    select: makeNodeComponent("select"),
    // Metadata about props expected for PlasmicHomepage
    internalVariantProps: PlasmicHomepage__VariantProps,
    internalArgProps: PlasmicHomepage__ArgProps,
    // Page metadata
    pageMetadata: {
      title: "",
      description: "",
      ogImageSrc: "",
      canonical: ""
    }
  }
);

export default PlasmicHomepage;
/* prettier-ignore-end */
